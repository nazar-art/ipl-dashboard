{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","console","log","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95451546.chunk.js","sourcesContent":["import {React} from 'react'\nimport {Link} from \"react-router-dom\";\n\nimport './MatchDetailCard.scss';\n\nexport const MatchDetailCard = ({teamName, match}) => {\n    if (!match) return null;\n\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`\n    const isMatchWon = teamName === match.matchWinner;\n\n    return (\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n            <div>\n                <span className=\"vs\">vs</span>\n                <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n                <h2 className=\"match-date\">{match.date}</h2>\n                <h3 className=\"match-venue\">at {match.venue}</h3>\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </h3>\n            </div>\n\n            <div className=\"additional-detail\">\n                <h3>First Innings</h3>\n                <p>{match.team1}</p>\n                <h3>Second Innings</h3>\n                <p>{match.team2}</p>\n                <h3>Man of the match</h3>\n                <p>{match.playerOfMatch}</p>\n                <h3>Umpires</h3>\n                <p>{match.umpire1}, {match.umpire2}</p>\n            </div>\n        </div>\n    );\n}\n","import {React} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport './MatchSmallCard.scss';\n\nexport const MatchSmallCard = ({teamName, match}) => {\n    if (!match) return null;\n\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`\n    const isMatchWon = teamName === match.matchWinner;\n\n    return (\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\n            <span className=\"vs\">vs</span>\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </p>\n        </div>\n    );\n}\n","import {React, useEffect, useState} from 'react'\nimport {useParams, Link} from \"react-router-dom\";\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\nimport {MatchSmallCard} from \"../components/MatchSmallCard\";\nimport {PieChart} from 'react-minimal-pie-chart';\n\nimport './TeamPage.scss';\n\nexport const TeamPage = () => {\n\n    const [team, setTeam] = useState({matches: []});\n    const {teamName} = useParams();\n\n    useEffect(\n        () => {\n\n            const fetchTeam = async () => {\n                // const response = await fetch(\"http://localhost:8080/team/Royal Challengers\");\n                // const response = await fetch(`http://localhost:8080/team/${teamName}`);\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n                const data = await response.json();\n\n                /*console.log(data);*/\n                setTeam(data);\n            }\n\n            fetchTeam();\n        }, [teamName]\n    )\n\n    if (!team || !team.teamName) {\n        return <h1>Team not found</h1>\n    }\n\n    return (\n        <div className=\"TeamPage\">\n            <div className=\"team-name-section\">\n                <h1 className=\"team-name\">{team.teamName}</h1>\n            </div>\n\n            <div className=\"win-loss-section\">\n                Wins / Losses\n                <PieChart\n                    data={[\n                        {title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d'},\n                        {title: 'Wins', value: team.totalWins, color: '#4da375'},\n                    ]}\n                />\n            </div>\n\n            <div className=\"match-detail-section\">\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\n            </div>\n\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match}/>)}\n\n            <div className=\"more-link\">\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_END_YEAR}`}>\n                    More >\n                </Link>\n            </div>\n        </div>\n    );\n}\n","import {React} from 'react';\nimport {Link} from 'react-router-dom';\nimport './YearSelector.scss'\n\nexport const YearSelector = ({teamName}) => {\n    let years = [];\n\n    const startYear = process.env.REACT_APP_START_YEAR;\n    const endYear = process.env.REACT_APP_END_YEAR;\n\n    for (let i = startYear; i <= endYear; i++) {\n        years.push(i);\n    }\n\n    return (\n        <ol className=\"YearSelector\">\n            {\n                years.map(year => (\n                    <li key={year}>\n                        <Link to={`/teams/${teamName}/matches/${year}`}>\n                            {year}\n                        </Link>\n                    </li>\n                ))\n            }\n        </ol>\n    );\n}","import {React, useEffect, useState} from 'react'\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\nimport {YearSelector} from \"../components/YearSelector\";\nimport {useParams} from \"react-router-dom\";\nimport './MatchPage.scss';\n\nexport const MatchPage = () => {\n\n    const [matches, setMatches] = useState([]);\n    const { teamName, year } = useParams();\n\n    useEffect(\n        () => {\n            const fetchMatches = async () => {\n                // const response = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n                const data = await response.json();\n\n                console.log(data);\n                setMatches(data);\n            }\n\n            fetchMatches();\n        }, [teamName, year]\n    )\n\n\n    return (\n        <div className=\"MatchPage\">\n            <div className=\"year-selector\">\n                <h3>Select Year</h3>\n                <YearSelector teamName={teamName}/>\n            </div>\n\n            <div>\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n                {\n                    matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match}/>)\n                }\n            </div>\n        </div>\n    );\n}\n","import { Link } from 'react-router-dom';\nimport { React } from 'react';\nimport './TeamTile.scss';\n\nexport const TeamTile = ({teamName}) => {\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n                <Link to={`/teams/${teamName}`}>\n                    {teamName}\n                </Link>\n            </h1>\n        </div>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport { TeamTile } from '../components/TeamTile';\nimport './HomePage.scss';\n\n\nexport const HomePage = () => {\n    const [teams, setTeams] = useState([]);\n\n    useEffect(\n        () => {\n            const fetchAllTeams = async () => {\n                // const response = await fetch(`http://localhost:8080/team`);\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n                const data = await response.json();\n                setTeams(data);\n            };\n            fetchAllTeams();\n        }, []\n    );\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">Java Brains IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n            </div>\n        </div>\n    );\n}","import './App.scss';\nimport {TeamPage} from \"./pages/TeamPage\";\nimport {MatchPage} from \"./pages/MatchPage\";\nimport {HomePage} from \"./pages/HomePage\";\n// import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/teams/:teamName/matches/:year\">\n                        <MatchPage />\n                    </Route>\n                    <Route path=\"/teams/:teamName\">\n                        <TeamPage />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomePage />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}